'''
программа должна понимать параметры командной строки:
    роль - определяет будет ли приложение отправлять данные или принимать данные
    --role send/recieve
    
    имя сервера - полное имя сервера или ip-адрес сервера с которым программа будет взаимодействовать 
(используется только для роли отправляющей данные)
    --server 

    ip-адрес и порт на котором будет запущен сервис приема данных (используется только для роли принимающей данные)
    --ip --port

должен быть написан bash-скрипт в котором:
    - получается список сетевых интерфейсов для которых установлен адрес ipv4, 
    включая локальный, извлекается его ipv4-адрес и добавляется в список ILIST
    - объявляется переменная MIN_PORT в которой указывается целочисленное значение, 
    например, 60000, используемое в качестве номера порта
    - для каждого элемента SERVER_IP массива в переменной ILIST:
        - запускается приложение в роли принимающей стороны, ожидающее подключения на IP-адресе SERVER_IP и порту который вычисляется 
        как MIN_PORT + <порядковый номер элемента массива>, stdout каждого приложения перенаправляется в отдельный временный файл 
        - запускается приложение в роли отправителя, подключающееся по IP-адресу SERVER_IP и порту который вычисляется как 
        MIN_PORT + <порядковый номер элемента массива>
        
        # MINPORT = 60000
        127.0.0.1
        127.0.0.2

- после запуска приложений для каждого элемента массива и завершения отправки данных выводится сообщение "Done. Press any key to exit." и ожидается нажатие клавиши
- после нажатия клавиши в скрипте выполняется явное принудительное завершение всех процессов приложения, запущенных в роли принимающей 
стороны, с выводом PID завершаемого процесса
- удаление всех временных файлов
'''
import argparse
import sys
import network_communication

def main():
    network_communication.main()

if __name__ == '__main__':
    main()